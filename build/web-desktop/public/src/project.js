require=function c(o,a,r){function h(i,e){if(!a[i]){if(!o[i]){var t="function"==typeof require&&require;if(!e&&t)return t(i,!0);if(l)return l(i,!0);var n=new Error("Cannot find module '"+i+"'");throw n.code="MODULE_NOT_FOUND",n}var s=a[i]={exports:{}};o[i][0].call(s.exports,function(e){var t=o[i][1][e];return h(t||e)},s,s.exports,c,o,a,r)}return a[i].exports}for(var l="function"==typeof require&&require,e=0;e<r.length;e++)h(r[e]);return h}({BeerBottle:[function(e,t,i){"use strict";cc._RF.push(t,"8a989KnCZhMbot83dNunOy4","BeerBottle"),cc.Class({extends:cc.Component,properties:{pickRadius:0,speed:10},onLoad:function(){},start:function(){},update:function(e){this.node.y-=this.speed},setSpeed:function(e){this.speed=e}}),cc._RF.pop()},{}],GameManager:[function(e,t,i){"use strict";cc._RF.push(t,"44c05aSvJdCaqm9DhfPOpyG","GameManager");var n=e("Player"),s=[],c=0;cc.Class({extends:cc.Component,properties:{player:{default:null,type:n},beerBottlePrefab:{default:null,type:cc.Prefab},canvas:{default:null,type:cc.Canvas},btnPlay:{default:null,type:cc.Button},btnRetry:{default:null,type:cc.Button},btnMenu:{default:null,type:cc.Button},scoreLabel:{default:null,type:cc.Label},isPlaying:!1,isOver:!1,brokenBottle:0,score:0},onLoad:function(){this.canvas.node.getChildByName("chaibia").active=!1,cc.find("GUI/GameOver",this.node).active=!1},spawnNewBeerBottle:function(){var e=cc.instantiate(this.beerBottlePrefab);this.canvas.node.addChild(e),e.setPosition(this.getNewBeerPosition()),s.push(e)},clickPlayButton:function(){1==this.isOver?this.resetStatus():(cc.find("GUI/MainMenu",this.node).active=!1,cc.find("GUI/GameOver",this.node).active=!1),this.isPlaying=!0},clickRetryButton:function(){cc.find("GUI/GameOver",this.node).active=!1,this.resetStatus(),this.isPlaying=!0},clickMenuButton:function(){cc.find("GUI/GameOver",this.node).active=!1,cc.find("GUI/MainMenu",this.node).active=!0,this.resetStatus()},resetStatus:function(){c=0,this.isOver=!1,this.score=0},getNewBeerPosition:function(){var e=this.canvas.node.width/2,t=2*(Math.random()-.5)*e,i=this.canvas.node.height/2-100;return cc.v2(t,i)},getDistance:function(e,t){var i=t.x-e.x,n=t.y-e.y;return Math.sqrt(Math.abs(Math.pow(i,2)+Math.pow(n,2)))},gainScore:function(){this.score+=1,this.scoreLabel.string="Score: "+this.score},start:function(){this.timer=0},update:function(e){var t=this;if(this.isPlaying){this.timer<=4.5?this.timer+=e:(this.spawnNewBeerBottle(),this.timer=0,console.log(this.getNewBeerPosition()),console.log("player: "+this.player.node.getPosition())),this.scoreLabel.string="Score: "+this.score,s.forEach(function(e){t.getDistance(t.player.node,e)<=60?(t.gainScore(),s.shift(),e.destroy()):e.y<-270&&(s.shift(),e.destroy(),3<=(c+=1)&&(t.isPlaying=!1,t.isOver=!0))});var i=this.canvas.width/2+20;(this.player.node.x>i||this.player.x<-i)&&(this.isPlaying=!1,this.isOver=!0,console.log("cc")),console.log("broken bottle : "+c),console.log("number of children in canvas: "+this.canvas.node.childrenCount),s.forEach(function(e){console.log("dis: "+t.getDistance(t.player.node,e)),console.log()})}else this.isOver&&(cc.find("GUI/GameOver",this.node).active=!0)}}),cc._RF.pop()},{Player:"Player"}],Player:[function(e,t,i){"use strict";cc._RF.push(t,"cd9cbeBM5JCabopbXJvnaoZ","Player"),cc.Class({extends:cc.Component,properties:{maxMoveSpeed:500,accel:100},setInputControl:function(){var t=this;cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN,function(e){switch(e.keyCode){case cc.KEY.a:t.accLeft=!0;break;case cc.KEY.d:t.accRight=!0}}),cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,function(e){switch(e.keyCode){case cc.KEY.a:t.accLeft=!1;break;case cc.KEY.d:t.accRight=!1}})},limitArea:function(e){var t=this.node.parent.width/2;this.node.x>t?(this.node.x,this.xSpeed=0):this.node.x<-t&&(this.node.x,this.xSpeed=0)},onLoad:function(){this.accLeft=!1,this.accRight=!1,this.xSpeed=0,this.setInputControl()},start:function(){},update:function(e){this.accLeft?this.xSpeed=this.xSpeed-this.accel*e:this.accRight&&(this.xSpeed=this.xSpeed+this.accel*e),Math.abs(this.xSpeed>this.maxMoveSpeed)&&(this.xSpeed=this.maxMoveSpeed*this.xSpeed/Math.abs(this.xSpeed)),this.node.x=this.node.x+this.xSpeed*e,this.limitArea(e),console.log("player: "+this.node.getPosition())}}),cc._RF.pop()},{}]},{},["BeerBottle","GameManager","Player"]);