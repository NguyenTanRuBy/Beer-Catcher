{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","maxMoveSpeed","accel","setInputControl","seft","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","accLeft","d","accRight","KEY_UP","limitArea","dt","maxX","node","parent","width","x","xSpeed","onLoad","start","update","Math","abs","console","log","getPosition"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,sBAAc,GADN;AAERC,eAAO;AAFC,KAHP;;AAQLC,qBAAiB,2BACjB;AACI,YAAIC,OAAO,IAAX;AACAR,WAAGS,WAAH,CAAeC,EAAf,CAAkBV,GAAGW,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,UAASC,KAAT,EAAgB;AACjE,oBAAQA,MAAMC,OAAd;AAEI,qBAAKf,GAAGgB,GAAH,CAAOC,CAAZ;AACIT,yBAAKU,OAAL,GAAe,IAAf;AACA;AACJ,qBAAKlB,GAAGgB,GAAH,CAAOG,CAAZ;AACIX,yBAAKY,QAAL,GAAgB,IAAhB;AACA;AAPR;AASH,SAVD;;AAYApB,WAAGS,WAAH,CAAeC,EAAf,CAAkBV,GAAGW,WAAH,CAAeC,SAAf,CAAyBS,MAA3C,EAAmD,UAAUP,KAAV,EAAiB;AAChE,oBAAQA,MAAMC,OAAd;AACI,qBAAKf,GAAGgB,GAAH,CAAOC,CAAZ;AACIT,yBAAKU,OAAL,GAAe,KAAf;AACA;AACJ,qBAAKlB,GAAGgB,GAAH,CAAOG,CAAZ;AACIX,yBAAKY,QAAL,GAAgB,KAAhB;AACA;AANR;AAQH,SATD;AAUH,KAjCI;;AAmCLE,eAAW,mBAAUC,EAAV,EACX;AACI,YAAIC,OAAO,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,GAAyB,CAApC,CADJ,CAC2C;;AAEvC,YAAI,KAAKF,IAAL,CAAUG,CAAV,GAAcJ,IAAlB,EAAwB;AACpB,iBAAKC,IAAL,CAAUG,CAAV,IAAeJ,IAAf;AACA,iBAAKK,MAAL,GAAc,CAAd;AACD;AACF,SAJD,MAKK,IAAI,KAAKJ,IAAL,CAAUG,CAAV,GAAc,CAACJ,IAAnB,EAAyB;AAC1B,iBAAKC,IAAL,CAAUG,CAAV,IAAe,CAACJ,IAAhB;AACA,iBAAKK,MAAL,GAAc,CAAd;AACA;AACH;AACJ,KAjDI;AAkDL;;AAEAC,UApDK,oBAqDL;AACI,aAAKZ,OAAL,GAAe,KAAf;AACA,aAAKE,QAAL,GAAgB,KAAhB;;AAEA,aAAKS,MAAL,GAAc,CAAd;AACA,aAAKtB,eAAL;AACH,KA3DI;AA6DLwB,SA7DK,mBA6DI,CAER,CA/DI;AAiELC,UAjEK,kBAiEET,EAjEF,EAkEL;;AAEI,YAAI,KAAKL,OAAT,EACA;AACI,iBAAKW,MAAL,GAAc,KAAKA,MAAL,GAAe,KAAKvB,KAAL,GAAaiB,EAA1C;AACA;AACH,SAJD,MAKK,IAAI,KAAKH,QAAT,EAAmB;AACpB,iBAAKS,MAAL,GAAc,KAAKA,MAAL,GAAe,KAAKvB,KAAL,GAAaiB,EAA1C;AACA;AACH;;AAED,YAAIU,KAAKC,GAAL,CAAS,KAAKL,MAAL,GAAc,KAAKxB,YAA5B,CAAJ,EAA+C;AAC3C,iBAAKwB,MAAL,GAAc,KAAKxB,YAAL,GAAoB,KAAKwB,MAAzB,GAAkCI,KAAKC,GAAL,CAAS,KAAKL,MAAd,CAAhD;AACH;AACD,aAAKJ,IAAL,CAAUG,CAAV,GAAc,KAAKH,IAAL,CAAUG,CAAV,GAAe,KAAKC,MAAL,GAAcN,EAA3C;;AAEA,aAAKD,SAAL,CAAeC,EAAf;AACAY,gBAAQC,GAAR,CAAY,aAAa,KAAKX,IAAL,CAAUY,WAAV,EAAzB;AAEH;AAtFI,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        maxMoveSpeed: 500,\r\n        accel: 100,\r\n    },\r\n\r\n    setInputControl: function()\r\n    {\r\n        var seft = this;\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function(event) {\r\n            switch (event.keyCode)\r\n            {\r\n                case cc.KEY.a:\r\n                    seft.accLeft = true;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    seft.accRight = true;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\r\n            switch (event.keyCode) {\r\n                case cc.KEY.a:\r\n                    seft.accLeft = false;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    seft.accRight = false;\r\n                    break;\r\n            }\r\n        });\r\n    },\r\n\r\n    limitArea: function (dt)\r\n    {\r\n        var maxX = this.node.parent.width / 2; // maxX of canvas\r\n\r\n        if (this.node.x > maxX) {\r\n            this.node.x == maxX;\r\n            this.xSpeed = 0;\r\n           // this.xSpeed = this.xSpeed = this.xSpeed - (this.accel * dt);\r\n        }\r\n        else if (this.node.x < -maxX) {\r\n            this.node.x == -maxX;\r\n            this.xSpeed = 0;\r\n            //this.xSpeed = this.xSpeed = this.xSpeed + (this.accel * dt);;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad()\r\n    {\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\r\n        this.xSpeed = 0;\r\n        this.setInputControl();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update(dt)\r\n    {\r\n\r\n        if (this.accLeft)\r\n        {\r\n            this.xSpeed = this.xSpeed - (this.accel * dt);\r\n            //this.xSpeed = this.xSpeed - 1;\r\n        }\r\n        else if (this.accRight) {\r\n            this.xSpeed = this.xSpeed + (this.accel * dt);\r\n            //this.xSpeed = this.xSpeed + 1;\r\n        }\r\n\r\n        if (Math.abs(this.xSpeed > this.maxMoveSpeed)) {\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n        this.node.x = this.node.x + (this.xSpeed * dt);\r\n\r\n        this.limitArea(dt);\r\n        console.log(\"player: \" + this.node.getPosition());\r\n\r\n    },\r\n});\r\n"]}